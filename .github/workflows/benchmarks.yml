name: Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]


jobs:
  server-nginx-setup:
    name: "Setup nginx image"
    runs-on: "ubuntu-latest"
    container: docker:27.1.1-cli
    permissions:
      contents: read
      packages: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Prepare image"
        run: |
          docker build -t ghcr.io/karpetrosyan/httpx-aiohttp/server/nginx:latest .
          docker login --username httpx-aiohttp --password ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker push ghcr.io/karpetrosyan/httpx-aiohttp/server/nginx:latest
        working-directory: ${{ github.workspace }}/benchmarks/server/nginx

  client-image-setup:
    name: "Build benchmarks image"
    runs-on: "ubuntu-latest"
    container: docker:27.1.1-cli
    strategy:
      matrix:
        PYTHON_IMAGE: [ "python" ]
    permissions:
      contents: read
      packages: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Prepare image"
        run: |
          docker build -t ghcr.io/karpetrosyan/httpx-aiohttp/benchmarks:latest --build-arg PYTHON_IMAGE=${{ matrix.PYTHON_IMAGE }} .
          docker login --username httpx-aiohttp --password ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker push ghcr.io/karpetrosyan/httpx-aiohttp/benchmarks:latest

  run:
    name: "Run benchmarks"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        CLIENT_SCRIPT_DIR: [ "/benchmarks/client/httpx" ]
        SERVER_IMAGE: [ "ghcr.io/karpetrosyan/httpx-aiohttp/server/nginx:latest" ]
    needs:
      - server-nginx-setup
      - client-image-setup
    container:
        image: ghcr.io/karpetrosyan/httpx-aiohttp/benchmarks:latest
    services:
      server:
        image: ${{ matrix.SERVER_IMAGE }}
        ports:
          - 8000:8000
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Run script"
        run: uv run -s script.py
        working-directory: ${{ github.workspace }}${{ matrix.CLIENT_SCRIPT_DIR }}

      - name: "Cat report"
        run: cat report.json
        working-directory: ${{ github.workspace }}${{ matrix.CLIENT_SCRIPT_DIR }}